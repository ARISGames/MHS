"use strict";

// Generated by CoffeeScript 2.3.0
(function () {
  // ARIS dialog IDs
  var allReady, drawCenter, imgs, _loadImage, loadImages, _loadSound, oneReady, readies, sashaBeforeStep1, sashaBeforeStep2, sashaBeforeStep3, sashaBeforeStep4, sashaEnd, sounds, steps;

  sashaBeforeStep1 = 29449;

  sashaBeforeStep2 = 33976;

  sashaBeforeStep3 = 33978;

  sashaBeforeStep4 = 53383;

  sashaEnd = 28522;

  drawCenter = function drawCenter(canvas, ctx, image) {
    var h, imageRatio, layerRatio, w, x, y;
    layerRatio = canvas.width / canvas.height;
    imageRatio = image.width / image.height;
    if (layerRatio < imageRatio) {
      // layer is narrower than image, bars on top and bottom
      w = canvas.width;
      h = canvas.width / imageRatio;
    } else {
      // image is narrower than layer, bars on left and right
      w = imageRatio * canvas.height;
      h = canvas.height;
    }
    x = (canvas.width - w) / 2;
    y = (canvas.height - h) / 2;
    return ctx.drawImage(image, x, y, w, h);
  };

  _loadImage = function loadImage(src, cb) {
    var img;
    img = new Image();
    img.onload = function () {
      return cb(img);
    };
    img.onerror = function () {
      return setTimeout(function () {
        return _loadImage(src, cb);
      }, 1000);
    };
    return img.src = src;
  };

  sounds = {};

  steps = [{
    image: "timpsula-0.jpg"
  }, {
    image: "timpsula-1.jpg"
  }, {
    image: "timpsula-2.jpg"
  }, {
    image: "timpsula-3.jpg",
    sound: "chop"
  }, {
    image: "timpsula-4.jpg",
    sound: "chop"
  }, {
    image: "timpsula-5.jpg",
    sound: "chop"
  }, {
    image: "timpsula-6.jpg",
    sound: "chop"
  }, {
    image: "timpsula-7.jpg",
    sound: "chop"
  }, {
    image: "timpsula-8.jpg",
    sound: "chop"
  }, {
    image: "timpsula-9.jpg",
    sound: "chop"
  }];

  imgs = {};

  loadImages = function loadImages(cb) {
    var count, i, image, len;
    count = steps.length;
    for (i = 0, len = steps.length; i < len; i++) {
      image = steps[i].image;

      (function (image) {
        return _loadImage("images/" + image, function (img) {
          imgs[image] = img;
          count--;
          if (count === 0) {
            return cb();
          }
        });
      })(image);
    }
    return void 0;
  };

  allReady = function allReady() {
    var canvas, clickListener, ctx, nextStep, step;
    canvas = document.getElementById('the-canvas');
    ctx = canvas.getContext('2d');
    clickListener = null;
    step = -1;
    nextStep = function nextStep() {
      var image, sound;
      step++;
      if (steps[step] != null) {
        var _steps$step = steps[step];
        image = _steps$step.image;
        sound = _steps$step.sound;

        canvas.width = window.innerWidth;
        canvas.height = window.innerHeight;
        ctx.fillStyle = 'white';
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        if (image != null) {
          drawCenter(canvas, ctx, imgs[image]);
        }
        if (sound != null) {
          return sounds[sound].play();
        }
      } else {
        return window.ARIS.exitToDialog(sashaBeforeStep2);
      }
    };
    // canvas.addEventListener 'mousedown', nextStep
    canvas.addEventListener('touchstart', nextStep);
    Origami.fastclick(document.body);
    return loadImages(nextStep);
  };

  readies = 3;

  oneReady = function oneReady() {
    readies--;
    if (readies === 0) {
      return allReady();
    }
  };

  window.ARIS = {
    ready: oneReady
  };

  document.addEventListener('DOMContentLoaded', oneReady);

  _loadSound = function loadSound(sound) {
    return sounds[sound] = new Howl({
      src: ["sounds/" + sound + ".ogg", "sounds/" + sound + ".mp3"],
      onload: oneReady,
      onloaderror: function onloaderror() {
        return setTimeout(_loadSound, 1000);
      }
    });
  };

  _loadSound('chop');
}).call(undefined);

