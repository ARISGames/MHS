// Generated by CoffeeScript 1.9.3
(function() {
  var Chokecherries, allReady, drawCenter, oneReady, readies, sashaAfterCooking, sashaBeforeStep1, sashaBeforeStep2, sashaBeforeStep3;

  sashaBeforeStep1 = 29449;

  sashaBeforeStep2 = 33976;

  sashaBeforeStep3 = 33978;

  sashaAfterCooking = 28522;

  drawCenter = function(layer, image) {
    var h, imageRatio, layerRatio, w, x, y;
    layerRatio = layer.width / layer.height;
    imageRatio = image.width / image.height;
    if (layerRatio < imageRatio) {
      w = layer.width;
      h = layer.width / imageRatio;
    } else {
      w = imageRatio * layer.height;
      h = layer.height;
    }
    x = (layer.width - w) / 2;
    y = (layer.height - h) / 2;
    return layer.drawImage(image, x, y, w, h);
  };

  Chokecherries = {
    create: function() {
      return this.stage = 0;
    },
    step: function() {},
    render: function() {
      this.app.layer.clear('white');
      return drawCenter(this.app.layer, this.app.images["chokecherries-" + (Math.min(this.stage, 4))]);
    },
    pointerdown: function(arg) {
      var ref, x, y;
      x = arg.x, y = arg.y;
      if (!((x != null) && (y != null))) {
        return;
      }
      this.x = x / this.app.width;
      this.y = y / this.app.height;
      this.distance = 0;
      if ((ref = this.stage) === 0) {
        return this.stage++;
      }
    },
    pointermove: function(arg) {
      var oldDistance, oldX, oldY, ref, x, y;
      x = arg.x, y = arg.y;
      if (!((x != null) && (y != null))) {
        return;
      }
      oldDistance = this.distance;
      oldX = this.x;
      oldY = this.y;
      this.x = x / this.app.width;
      this.y = y / this.app.height;
      this.distance += Math.sqrt(Math.pow(this.x - oldX, 2) + Math.pow(this.y - oldY, 2));
      if (Math.floor(oldDistance / 2) !== Math.floor(this.distance / 2)) {
        if ((ref = this.stage) === 1 || ref === 2 || ref === 3) {
          this.app.sound.play('squish');
          return this.stage++;
        } else if (this.stage === 4) {
          return window.ARIS.exitToDialog(sashaAfterCooking);
        }
      }
    }
  };

  allReady = function() {
    return window.game = playground({
      create: function() {
        var i, j;
        for (i = j = 0; j <= 4; i = ++j) {
          this.loadImage("chokecherries-" + i + ".png");
        }
        return this.loadSounds('squish');
      },
      ready: function() {
        return this.setState(Chokecherries);
      }
    });
  };

  readies = 2;

  oneReady = function() {
    readies--;
    if (readies === 0) {
      return allReady();
    }
  };

  window.ARIS = {
    ready: oneReady
  };

  document.addEventListener('DOMContentLoaded', oneReady);

}).call(this);
